From 0bbc4b97249b56291b86d9c861c6aae84b19f7e1 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sat, 24 Mar 2018 08:01:48 +0100
Subject: [PATCH 01/47] Fix backlight control on Galaxy S9(+)

Change-Id: I1fbbb47939c377597ef8ad6b88b2acea5f4acaa6
---
 .../android/server/lights/LightsService.java  | 21 ++++++++++++-------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/services/core/java/com/android/server/lights/LightsService.java b/services/core/java/com/android/server/lights/LightsService.java
index 868989097e4..b25bb2c7e09 100644
--- a/services/core/java/com/android/server/lights/LightsService.java
+++ b/services/core/java/com/android/server/lights/LightsService.java
@@ -22,6 +22,7 @@ import android.os.Handler;
 import android.os.IBinder;
 import android.os.Message;
 import android.os.PowerManager;
+import android.os.SystemProperties;
 import android.os.Trace;
 import android.provider.Settings;
 import android.util.Slog;
@@ -74,6 +75,7 @@ public class LightsService extends SystemService {
                             ": brightness=0x" + Integer.toHexString(brightness));
                     return;
                 }
+
                 // Ideally, we'd like to set the brightness mode through the SF/HWC as well, but
                 // right now we just fall back to the old path through Lights brightessMode is
                 // anything but USER or the device shouldBeInLowPersistenceMode().
@@ -89,15 +91,18 @@ public class LightsService extends SystemService {
                     }
                     SurfaceControl.setDisplayBrightness(mDisplayToken,
                             (float) brightness / mSurfaceControlMaximumBrightness);
-                } else {
-                    int color = brightness & 0x000000ff;
-                    if (mUseScaleBrightness > 0) {
-                        color = brightness * mUseScaleBrightness / 255;
-                    } else {
-                        color = 0xff000000 | (color << 16) | (color << 8) | color;
-                    }
-                    setLightLocked(color, LIGHT_FLASH_NONE, 0, 0, brightnessMode);
+		    return;
                 }
+
+		String fp = SystemProperties.get("ro.vendor.build.fingerprint", "hello");
+		if(fp.contains("starlte") || fp.contains("star2lte")) {
+			setLightLocked(brightness*100, LIGHT_FLASH_HARDWARE, 0, 0, brightnessMode);
+			return;
+		}
+
+                int color = brightness & 0x000000ff;
+                color = 0xff000000 | (color << 16) | (color << 8) | color;
+                setLightLocked(color, LIGHT_FLASH_NONE, 0, 0, brightnessMode);
             }
         }
 
-- 
2.20.1

